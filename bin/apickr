#!/usr/bin/env perl

=head1 NAME

apickr - Synchronize aperture library and flickr account.

=head1 SYNOPSIS

apickr [OPTIONS] COMMAND PATH

Synchronize aperture library given by PATH with flickr.

=head1 COMMANDS

  albums              list albums
  images              list images
  sync                sync with flickr
  match               match aperture images with flickr photos
  flickr-fix          fix flickr dates from exif
  flickr-photosets    list flickr photosets
  flickr-photos       list flickr photos
  flickr-backup PATH  backup metadata for selected photos to PATH
  flickr-restore PATH restore metadata for selected photos from PATH

=head1 OPTIONS

 General Options
   --help|-h         brief help message

 Options to select images/albums
   --num=NUM         only process NUM items
   --album|-a=REGEX  only process albums or photosets which match REGEX
   --title|-t=REGEX  only process images or photos which match REGEX
   --word|-w         only match --album or --title at word boundaries
   --id              only process photo/image or photoset/album with this id
   --filter|-f=REGEX only display/count results where any key or any value match REGEX
   --not|--invert    only display/count results where no key or value match --filter

 Options to change output for selected images/albums
   --count|-c        count number of results
   --classify=FIELD  count number of results per FIELD value
   --verbose|-v      output verbose information
   --select|-s=REGEX regex to select *additional* keys to display
                     or the *only* keys to write for restore/sync.
   --select-only|-o  only select additional keys to display without
                     the default fields.
   --extras=S        added to flickr api calls where aplicable
   --exif            add exif data to images and photos
   --contexts        add contexts (photosets...) to flickr photos
   --info            add additional info to flickr photos

 Options to change behaviour of specific commands
   --dry-run|-n      only output changes to flickr data
   --force|-f        overwrite already existing backups with flickr-backup
   --fix-date-upload also set the upload date to the date taken in flickr-fix
   --upload          upload missing photos to flickr during sync

=head1 AUTHOR

 Nathan Gass <gass@search.ch>

=cut

use Modern::Perl;
use autodie;
use common::sense;
use List::AllUtils qw/first max min any all sum/;
use YAML;

use lib './lib';
use Apickr::Common qw/display parallelize/;
use Apickr::Flickr;
use Apickr::Aperture;
use Apickr::Sync;

use Getopt::Long qw/:config/;
use Pod::Usage;
use YAML::Syck qw/LoadFile/;
$YAML::Syck::ImplicitUnicode = 1;
use File::Spec::Functions qw/splitpath catdir/;

my @podargs = (-verbose => 99, -sections => [qw/NAME SYNOPSIS COMMANDS OPTIONS/]);
my $config = {};
{
	local $@;
	eval {
		$config = LoadFile(catdir($ENV{HOME}, '.apickrrc'));
	};
}

our $opts = {};

GetOptions(
	$opts,
	'help|h', 'num=i', 'album|a=s', 'title|t=s', 'word|t', 'id=s', 'verbose|v+',
	'select|s=s', 'select-only|o', 'dry-run|n', 'force|f', 'extras=s', 'exif', 'contexts', 'info', 'fix-date-upload', 'count|c',
	'filter|f=s', 'classify=s', 'not|invert', 'upload',
) or pod2usage(-exitval => 2, @podargs);
pod2usage(@podargs) if $opts->{help};
$config = {%$config, %$opts};

$0 = 'apickr';

if ($opts->{id}) {
	my $id = delete $opts->{id};
	$opts->{ $id =~ /^\d+$/ ? 'ickr_id' : 'ap_id' } = $id;
}

my $command = shift() || "albums";
if ($command !~ /^flickr-/) {
	$opts->{path} = shift() || catdir($ENV{HOME}, 'Pictures', '2013_3star.aplibrary');
}

given ($command) {

	when ("albums") {
		display(Apickr::Aperture::select_albums());
	}

	when ("images") {
		my $gen = Apickr::Aperture::select_images();
		$gen = Apickr::Aperture::add_exif($gen)
			if $opts->{exif};
		display($gen);
	}

	when ("match") {
		my $ap_gen   = Apickr::Aperture::select_images();
		my $ickr_gen = parallelize(Apickr::Flickr::photos_list());
		display(Apickr::Sync::match($ap_gen, $ickr_gen));
	}

	when ("sync") {
		Apickr::Sync::sync();
	}

	when ("flickr-backup") {
		Apickr::Flickr::backup(@ARGV);
	}

	when ("flickr-restore") {
		Apickr::Flickr::restore(@ARGV);
	}

	when ("flickr-fix") {
		Apickr::Flickr::fix();
	}

	when ("flickr-photosets") {
		display(Apickr::Flickr::photosets_list(total => $opts->{num}));
	}

	when ("flickr-photos") {
		my $gen = Apickr::Flickr::photos_list();
		display($gen);
	}

	default {die "Unknown command $_"}
};

